/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['oauth_middleware.js']) {
  _$jscoverage['oauth_middleware.js'] = [];
  _$jscoverage['oauth_middleware.js'][11] = 0;
  _$jscoverage['oauth_middleware.js'][13] = 0;
  _$jscoverage['oauth_middleware.js'][14] = 0;
  _$jscoverage['oauth_middleware.js'][16] = 0;
  _$jscoverage['oauth_middleware.js'][17] = 0;
  _$jscoverage['oauth_middleware.js'][19] = 0;
  _$jscoverage['oauth_middleware.js'][22] = 0;
  _$jscoverage['oauth_middleware.js'][23] = 0;
  _$jscoverage['oauth_middleware.js'][26] = 0;
  _$jscoverage['oauth_middleware.js'][29] = 0;
  _$jscoverage['oauth_middleware.js'][30] = 0;
  _$jscoverage['oauth_middleware.js'][31] = 0;
  _$jscoverage['oauth_middleware.js'][32] = 0;
  _$jscoverage['oauth_middleware.js'][33] = 0;
  _$jscoverage['oauth_middleware.js'][34] = 0;
  _$jscoverage['oauth_middleware.js'][36] = 0;
  _$jscoverage['oauth_middleware.js'][38] = 0;
  _$jscoverage['oauth_middleware.js'][39] = 0;
  _$jscoverage['oauth_middleware.js'][40] = 0;
  _$jscoverage['oauth_middleware.js'][41] = 0;
  _$jscoverage['oauth_middleware.js'][42] = 0;
  _$jscoverage['oauth_middleware.js'][44] = 0;
  _$jscoverage['oauth_middleware.js'][46] = 0;
  _$jscoverage['oauth_middleware.js'][50] = 0;
  _$jscoverage['oauth_middleware.js'][54] = 0;
  _$jscoverage['oauth_middleware.js'][55] = 0;
  _$jscoverage['oauth_middleware.js'][56] = 0;
  _$jscoverage['oauth_middleware.js'][57] = 0;
  _$jscoverage['oauth_middleware.js'][60] = 0;
  _$jscoverage['oauth_middleware.js'][61] = 0;
  _$jscoverage['oauth_middleware.js'][62] = 0;
  _$jscoverage['oauth_middleware.js'][63] = 0;
  _$jscoverage['oauth_middleware.js'][64] = 0;
  _$jscoverage['oauth_middleware.js'][71] = 0;
  _$jscoverage['oauth_middleware.js'][72] = 0;
  _$jscoverage['oauth_middleware.js'][73] = 0;
  _$jscoverage['oauth_middleware.js'][74] = 0;
  _$jscoverage['oauth_middleware.js'][77] = 0;
  _$jscoverage['oauth_middleware.js'][78] = 0;
  _$jscoverage['oauth_middleware.js'][79] = 0;
  _$jscoverage['oauth_middleware.js'][81] = 0;
  _$jscoverage['oauth_middleware.js'][82] = 0;
  _$jscoverage['oauth_middleware.js'][84] = 0;
  _$jscoverage['oauth_middleware.js'][85] = 0;
  _$jscoverage['oauth_middleware.js'][112] = 0;
  _$jscoverage['oauth_middleware.js'][113] = 0;
  _$jscoverage['oauth_middleware.js'][115] = 0;
  _$jscoverage['oauth_middleware.js'][116] = 0;
  _$jscoverage['oauth_middleware.js'][118] = 0;
  _$jscoverage['oauth_middleware.js'][120] = 0;
  _$jscoverage['oauth_middleware.js'][121] = 0;
  _$jscoverage['oauth_middleware.js'][123] = 0;
  _$jscoverage['oauth_middleware.js'][124] = 0;
  _$jscoverage['oauth_middleware.js'][125] = 0;
  _$jscoverage['oauth_middleware.js'][126] = 0;
  _$jscoverage['oauth_middleware.js'][127] = 0;
  _$jscoverage['oauth_middleware.js'][128] = 0;
  _$jscoverage['oauth_middleware.js'][129] = 0;
  _$jscoverage['oauth_middleware.js'][130] = 0;
  _$jscoverage['oauth_middleware.js'][131] = 0;
  _$jscoverage['oauth_middleware.js'][132] = 0;
  _$jscoverage['oauth_middleware.js'][133] = 0;
  _$jscoverage['oauth_middleware.js'][135] = 0;
}
_$jscoverage['oauth_middleware.js'][11]++;
var tapi = require("./tapi");
_$jscoverage['oauth_middleware.js'][13]++;
function get_referer(req, options) {
  _$jscoverage['oauth_middleware.js'][14]++;
  var referer = req.headers.referer || "/";
  _$jscoverage['oauth_middleware.js'][16]++;
  if (referer.indexOf(options.login_path) === 0 || referer.indexOf(options.logout_path) === 0) {
    _$jscoverage['oauth_middleware.js'][17]++;
    referer = "/";
  }
  _$jscoverage['oauth_middleware.js'][19]++;
  return referer;
}
_$jscoverage['oauth_middleware.js'][22]++;
function redirect(res, url) {
  _$jscoverage['oauth_middleware.js'][23]++;
  res.writeHead(302, {"Location": url});
  _$jscoverage['oauth_middleware.js'][26]++;
  res.end();
}
_$jscoverage['oauth_middleware.js'][29]++;
function login(req, res, next, options) {
  _$jscoverage['oauth_middleware.js'][30]++;
  var blogtype_field = options.blogtype_field;
  _$jscoverage['oauth_middleware.js'][31]++;
  var blogtype = req.query[blogtype_field];
  _$jscoverage['oauth_middleware.js'][32]++;
  var referer = get_referer(req, options);
  _$jscoverage['oauth_middleware.js'][33]++;
  if (! options.home_url) {
    _$jscoverage['oauth_middleware.js'][34]++;
    options.home_url = "http://" + req.headers.host;
  }
  _$jscoverage['oauth_middleware.js'][36]++;
  var auth_callback = options.home_url + options.callback_path + "?" + blogtype_field + "=" + blogtype;
  _$jscoverage['oauth_middleware.js'][38]++;
  var user = {blogType: blogtype};
  _$jscoverage['oauth_middleware.js'][39]++;
  tapi.get_authorization_url(user, auth_callback, (function (error, auth_url) {
  _$jscoverage['oauth_middleware.js'][40]++;
  if (error || ! auth_url) {
    _$jscoverage['oauth_middleware.js'][41]++;
    if (! error) {
      _$jscoverage['oauth_middleware.js'][42]++;
      error = new Error("empty auth_url");
    }
    _$jscoverage['oauth_middleware.js'][44]++;
    return options.error_callback(error, referer, user, req, res);
  }
  _$jscoverage['oauth_middleware.js'][46]++;
  req.session.oauth_info = {oauth_token_secret: user.oauth_token_secret, referer: referer};
  _$jscoverage['oauth_middleware.js'][50]++;
  redirect(res, auth_url);
}));
}
_$jscoverage['oauth_middleware.js'][54]++;
function logout(req, res, next, options) {
  _$jscoverage['oauth_middleware.js'][55]++;
  var referer = get_referer(req, options);
  _$jscoverage['oauth_middleware.js'][56]++;
  req.session.oauthUser = null;
  _$jscoverage['oauth_middleware.js'][57]++;
  redirect(res, referer);
}
_$jscoverage['oauth_middleware.js'][60]++;
function callback(req, res, next, options) {
  _$jscoverage['oauth_middleware.js'][61]++;
  var blogtype = req.query[options.blogtype_field];
  _$jscoverage['oauth_middleware.js'][62]++;
  var oauth_info = req.session.oauth_info || {};
  _$jscoverage['oauth_middleware.js'][63]++;
  req.session.oauth_info = null;
  _$jscoverage['oauth_middleware.js'][64]++;
  var user = {blogtype: blogtype, blogType: blogtype, oauth_token_key: req.query.oauth_token, oauth_verifier: req.query.oauth_verifier, oauth_token_secret: oauth_info.oauth_token_secret};
  _$jscoverage['oauth_middleware.js'][71]++;
  var referer = oauth_info.referer;
  _$jscoverage['oauth_middleware.js'][72]++;
  tapi.get_access_token(user, (function (error, auth_user) {
  _$jscoverage['oauth_middleware.js'][73]++;
  if (error) {
    _$jscoverage['oauth_middleware.js'][74]++;
    return next(error);
  }
  _$jscoverage['oauth_middleware.js'][77]++;
  tapi.verify_credentials(auth_user, (function (error, t_user) {
  _$jscoverage['oauth_middleware.js'][78]++;
  if (error) {
    _$jscoverage['oauth_middleware.js'][79]++;
    return next(error);
  }
  _$jscoverage['oauth_middleware.js'][81]++;
  for (var k in auth_user) {
    _$jscoverage['oauth_middleware.js'][82]++;
    t_user[k] = auth_user[k];
}
  _$jscoverage['oauth_middleware.js'][84]++;
  req.session.oauthUser = t_user;
  _$jscoverage['oauth_middleware.js'][85]++;
  redirect(res, referer);
}));
}));
}
_$jscoverage['oauth_middleware.js'][112]++;
module.exports = (function oauth(options) {
  _$jscoverage['oauth_middleware.js'][113]++;
  if (typeof arguments[0] === "function") {
    _$jscoverage['oauth_middleware.js'][115]++;
    options = arguments[1] || {};
    _$jscoverage['oauth_middleware.js'][116]++;
    options.login_callback = arguments[0];
  }
  else {
    _$jscoverage['oauth_middleware.js'][118]++;
    options = options || {};
  }
  _$jscoverage['oauth_middleware.js'][120]++;
  if (options.home_url) {
    _$jscoverage['oauth_middleware.js'][121]++;
    options.home_url = home_url.replace(/\/+$/, "");
  }
  _$jscoverage['oauth_middleware.js'][123]++;
  options.login_path = options.login_path || "/oauth";
  _$jscoverage['oauth_middleware.js'][124]++;
  options.logout_path = options.logout_path || "/ouath/logout";
  _$jscoverage['oauth_middleware.js'][125]++;
  options.callback_path = options.login_path + "_callback";
  _$jscoverage['oauth_middleware.js'][126]++;
  options.blogtype_field = options.blogtype_field || "blogtype";
  _$jscoverage['oauth_middleware.js'][127]++;
  return (function (req, res, next) {
  _$jscoverage['oauth_middleware.js'][128]++;
  if (req.url.indexOf(options.callback_path) === 0) {
    _$jscoverage['oauth_middleware.js'][129]++;
    callback(req, res, next, options);
  }
  else {
    _$jscoverage['oauth_middleware.js'][130]++;
    if (req.url.indexOf(options.login_path) === 0) {
      _$jscoverage['oauth_middleware.js'][131]++;
      login(req, res, next, options);
    }
    else {
      _$jscoverage['oauth_middleware.js'][132]++;
      if (req.url.indexOf(options.logout_path) === 0) {
        _$jscoverage['oauth_middleware.js'][133]++;
        logout(req, res, next, options);
      }
      else {
        _$jscoverage['oauth_middleware.js'][135]++;
        next();
      }
    }
  }
});
});
_$jscoverage['oauth_middleware.js'].source = ["/*!"," * node-weibo - oauth_middleware for connect"," * Copyright(c) 2012 fengmk2 &lt;fengmk2@gmail.com&gt;"," * MIT Licensed"," */","","/**"," * Module dependencies."," */","","var tapi = require('./tapi');","","function get_referer(req, options) {","\tvar referer = req.headers['referer'] || '/';","\t// &#233;&#152;&#178;&#230;&#173;&#162;&#230;&#173;&#187;&#232;&#183;&#179;&#232;&#189;&#172;","\tif (referer.indexOf(options.login_path) === 0 || referer.indexOf(options.logout_path) === 0) {","\t\treferer = '/';","\t}","\treturn referer;","}","","function redirect(res, url) {","\tres.writeHead(302, {","\t\t'Location': url","\t});","\tres.end();","}","","function login(req, res, next, options) {","\tvar blogtype_field = options.blogtype_field;","\tvar blogtype = req.query[blogtype_field];","\tvar referer = get_referer(req, options);","\tif (!options.home_url) {","    options.home_url = 'http://' + req.headers.host;","\t}","\tvar auth_callback = options.home_url + options.callback_path ","\t\t+ '?' + blogtype_field + '=' + blogtype;","\tvar user = { blogType: blogtype };","\ttapi.get_authorization_url(user, auth_callback, function(error, auth_url) {","    if (error || !auth_url) {","      if (!error) {","          error = new Error('empty auth_url');","      }","      return options.error_callback(error, referer, user, req, res);","    }","    req.session.oauth_info = {","      oauth_token_secret: user.oauth_token_secret,","      referer: referer","    };","    redirect(res, auth_url);","\t});","}","","function logout(req, res, next, options) {","  var referer = get_referer(req, options);","  req.session.oauthUser = null;","  redirect(res, referer);","}","","function callback(req, res, next, options) {","\tvar blogtype = req.query[options.blogtype_field];","  var oauth_info = req.session.oauth_info || {};","  req.session.oauth_info = null;","\tvar user = {","\t\tblogtype: blogtype,","\t\tblogType: blogtype,","\t\toauth_token_key: req.query.oauth_token,","\t\toauth_verifier: req.query.oauth_verifier,","\t\toauth_token_secret: oauth_info.oauth_token_secret","\t};","\tvar referer = oauth_info.referer;","\ttapi.get_access_token(user, function(error, auth_user) {","\t\tif (error) {","      return next(error);","    }","\t\t// get user info","\t\ttapi.verify_credentials(auth_user, function(error, t_user) {","\t\t\tif (error) {","        return next(error);","      }","\t\t\tfor (var k in auth_user) {","\t\t\t\tt_user[k] = auth_user[k];","\t\t\t}","      req.session.oauthUser = t_user;","      redirect(res, referer);","\t\t});","\t});","}","","/**"," * oauth middleware for connect"," *"," * example:"," *"," *  connect("," *    connect.query(),"," *    connect.cookieParser(),"," *    connect.session({ secret: \"oh year a secret\" }),"," *    weibo.oauth()"," *  );"," *"," * @param {Object} options"," *   - `home_url`: use to create login success oauth_callback url with referer header, "," *     default is `'http://' + req.headers.host`;"," *   - `login_path`: login url, default is '/oauth'"," *   - `logout_path`: default is '/oauth/logout'"," *   - `callback_path`: default is login_path + '_callback'"," *   - `blogtype_field`: default is 'blogtype', "," *     if you want to connect weibo, login url should be '/oauth?blogtype=weibo'"," */","","module.exports = function oauth(options) {","  if (typeof arguments[0] === 'function') {","    // support old arguments style: (login_callback, options)","    options = arguments[1] || {};","    options.login_callback = arguments[0];","  } else {","    options = options || {};","  }","\tif (options.home_url) {","\t  options.home_url = home_url.replace(/\\/+$/, '');","\t}","\toptions.login_path = options.login_path || '/oauth';","  options.logout_path = options.logout_path || '/ouath/logout';","\toptions.callback_path = options.login_path + '_callback';","\toptions.blogtype_field = options.blogtype_field || 'blogtype'; // url &#228;&#184;&#141;&#229;&#140;&#186;&#229;&#136;&#134;&#229;&#164;&#167;&#229;&#176;&#143;&#229;&#134;&#153;\\","\treturn function(req, res, next) {","\t\tif (req.url.indexOf(options.callback_path) === 0) {","\t\t\tcallback(req, res, next, options);","\t\t} else if (req.url.indexOf(options.login_path) === 0) {","\t\t\tlogin(req, res, next, options);","\t\t} else if (req.url.indexOf(options.logout_path) === 0) {","      logout(req, res, next, options);","    } else {","\t\t\tnext();","\t\t}","\t};","};"];
