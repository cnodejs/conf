/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['tapi.js']) {
  _$jscoverage['tapi.js'] = [];
  _$jscoverage['tapi.js'][1] = 0;
  _$jscoverage['tapi.js'][3] = 0;
  _$jscoverage['tapi.js'][4] = 0;
  _$jscoverage['tapi.js'][5] = 0;
  _$jscoverage['tapi.js'][6] = 0;
  _$jscoverage['tapi.js'][7] = 0;
  _$jscoverage['tapi.js'][8] = 0;
  _$jscoverage['tapi.js'][10] = 0;
  _$jscoverage['tapi.js'][11] = 0;
  _$jscoverage['tapi.js'][14] = 0;
  _$jscoverage['tapi.js'][15] = 0;
  _$jscoverage['tapi.js'][16] = 0;
  _$jscoverage['tapi.js'][17] = 0;
  _$jscoverage['tapi.js'][19] = 0;
  _$jscoverage['tapi.js'][20] = 0;
  _$jscoverage['tapi.js'][25] = 0;
  _$jscoverage['tapi.js'][26] = 0;
  _$jscoverage['tapi.js'][27] = 0;
  _$jscoverage['tapi.js'][28] = 0;
  _$jscoverage['tapi.js'][32] = 0;
  _$jscoverage['tapi.js'][45] = 0;
  _$jscoverage['tapi.js'][46] = 0;
  _$jscoverage['tapi.js'][48] = 0;
  _$jscoverage['tapi.js'][49] = 0;
  _$jscoverage['tapi.js'][50] = 0;
  _$jscoverage['tapi.js'][52] = 0;
  _$jscoverage['tapi.js'][53] = 0;
  _$jscoverage['tapi.js'][54] = 0;
  _$jscoverage['tapi.js'][55] = 0;
  _$jscoverage['tapi.js'][56] = 0;
  _$jscoverage['tapi.js'][62] = 0;
  _$jscoverage['tapi.js'][63] = 0;
  _$jscoverage['tapi.js'][65] = 0;
  _$jscoverage['tapi.js'][67] = 0;
  _$jscoverage['tapi.js'][72] = 0;
  _$jscoverage['tapi.js'][82] = 0;
  _$jscoverage['tapi.js'][89] = 0;
  _$jscoverage['tapi.js'][120] = 0;
  _$jscoverage['tapi.js'][127] = 0;
  _$jscoverage['tapi.js'][134] = 0;
  _$jscoverage['tapi.js'][140] = 0;
  _$jscoverage['tapi.js'][145] = 0;
  _$jscoverage['tapi.js'][151] = 0;
  _$jscoverage['tapi.js'][152] = 0;
  _$jscoverage['tapi.js'][153] = 0;
  _$jscoverage['tapi.js'][154] = 0;
  _$jscoverage['tapi.js'][156] = 0;
  _$jscoverage['tapi.js'][158] = 0;
  _$jscoverage['tapi.js'][159] = 0;
  _$jscoverage['tapi.js'][160] = 0;
  _$jscoverage['tapi.js'][161] = 0;
  _$jscoverage['tapi.js'][162] = 0;
  _$jscoverage['tapi.js'][164] = 0;
  _$jscoverage['tapi.js'][166] = 0;
  _$jscoverage['tapi.js'][180] = 0;
  _$jscoverage['tapi.js'][190] = 0;
  _$jscoverage['tapi.js'][201] = 0;
  _$jscoverage['tapi.js'][211] = 0;
  _$jscoverage['tapi.js'][224] = 0;
  _$jscoverage['tapi.js'][229] = 0;
  _$jscoverage['tapi.js'][234] = 0;
  _$jscoverage['tapi.js'][239] = 0;
  _$jscoverage['tapi.js'][244] = 0;
  _$jscoverage['tapi.js'][249] = 0;
  _$jscoverage['tapi.js'][254] = 0;
  _$jscoverage['tapi.js'][259] = 0;
  _$jscoverage['tapi.js'][264] = 0;
  _$jscoverage['tapi.js'][277] = 0;
  _$jscoverage['tapi.js'][286] = 0;
  _$jscoverage['tapi.js'][287] = 0;
  _$jscoverage['tapi.js'][290] = 0;
  _$jscoverage['tapi.js'][291] = 0;
  _$jscoverage['tapi.js'][292] = 0;
  _$jscoverage['tapi.js'][300] = 0;
  _$jscoverage['tapi.js'][304] = 0;
  _$jscoverage['tapi.js'][311] = 0;
  _$jscoverage['tapi.js'][319] = 0;
  _$jscoverage['tapi.js'][328] = 0;
  _$jscoverage['tapi.js'][335] = 0;
  _$jscoverage['tapi.js'][340] = 0;
  _$jscoverage['tapi.js'][347] = 0;
  _$jscoverage['tapi.js'][352] = 0;
  _$jscoverage['tapi.js'][360] = 0;
  _$jscoverage['tapi.js'][365] = 0;
  _$jscoverage['tapi.js'][370] = 0;
  _$jscoverage['tapi.js'][375] = 0;
  _$jscoverage['tapi.js'][380] = 0;
  _$jscoverage['tapi.js'][385] = 0;
  _$jscoverage['tapi.js'][390] = 0;
  _$jscoverage['tapi.js'][395] = 0;
  _$jscoverage['tapi.js'][400] = 0;
  _$jscoverage['tapi.js'][405] = 0;
}
_$jscoverage['tapi.js'][1]++;
(function () {
  _$jscoverage['tapi.js'][3]++;
  var TAPI = {};
  _$jscoverage['tapi.js'][4]++;
  var utils;
  _$jscoverage['tapi.js'][5]++;
  var root = this;
  _$jscoverage['tapi.js'][6]++;
  if (typeof module === "undefined") {
    _$jscoverage['tapi.js'][7]++;
    root.weibo.TAPI = TAPI;
    _$jscoverage['tapi.js'][8]++;
    utils = root.weibo.utils;
  }
  else {
    _$jscoverage['tapi.js'][10]++;
    module.exports = TAPI;
    _$jscoverage['tapi.js'][11]++;
    utils = require("./utils");
  }
  _$jscoverage['tapi.js'][14]++;
  var TSinaAPI;
  _$jscoverage['tapi.js'][15]++;
  var TwitterAPI;
  _$jscoverage['tapi.js'][16]++;
  var TQQAPI;
  _$jscoverage['tapi.js'][17]++;
  var TSOHUAPI;
  _$jscoverage['tapi.js'][19]++;
  if (typeof require !== "undefined") {
    _$jscoverage['tapi.js'][20]++;
    TSinaAPI = require("./tsina");
  }
  else {
    _$jscoverage['tapi.js'][25]++;
    TSinaAPI = root.weibo.TSinaAPI;
    _$jscoverage['tapi.js'][26]++;
    TwitterAPI = root.weibo.TwitterAPI;
    _$jscoverage['tapi.js'][27]++;
    TQQAPI = root.weibo.TQQAPI;
    _$jscoverage['tapi.js'][28]++;
    TSOHUAPI = root.weibo.TSOHUAPI;
  }
  _$jscoverage['tapi.js'][32]++;
  utils.extend(TAPI, {TYPES: {tsina: TSinaAPI, weibo: TSinaAPI}, enables: {}, init: (function (blogtype, appkey, secret, oauth_callback_url) {
  _$jscoverage['tapi.js'][45]++;
  if (! appkey) {
    _$jscoverage['tapi.js'][46]++;
    throw new Error("appkey must be set");
  }
  _$jscoverage['tapi.js'][48]++;
  var api = this.TYPES[blogtype];
  _$jscoverage['tapi.js'][49]++;
  if (! api) {
    _$jscoverage['tapi.js'][50]++;
    throw new Error(blogtype + " api not exists");
  }
  _$jscoverage['tapi.js'][52]++;
  api.config.source = api.config.oauth_key = appkey;
  _$jscoverage['tapi.js'][53]++;
  api.config.oauth_secret = secret;
  _$jscoverage['tapi.js'][54]++;
  this.enables[blogtype] = true;
  _$jscoverage['tapi.js'][55]++;
  if (oauth_callback_url) {
    _$jscoverage['tapi.js'][56]++;
    api.config.oauth_callback = oauth_callback_url;
  }
}), api_dispatch: (function (data) {
  _$jscoverage['tapi.js'][62]++;
  var user = data.user || data;
  _$jscoverage['tapi.js'][63]++;
  if (user && ! user.blogType) {
    _$jscoverage['tapi.js'][65]++;
    user.blogType = user.blogtype;
  }
  _$jscoverage['tapi.js'][67]++;
  return this.TYPES[user.blogType || "tsina"];
}), get_config: (function (user) {
  _$jscoverage['tapi.js'][72]++;
  return this.api_dispatch(user).config;
}), search: (function (data, callback, context) {
  _$jscoverage['tapi.js'][82]++;
  return this.api_dispatch(data).search(data, callback, context);
}), translate: (function (user, text, target, callback, context) {
  _$jscoverage['tapi.js'][89]++;
  return this.api_dispatch(user).translate(text, target, callback, context);
}), get_authorization_url: (function (user, callback, context) {
  _$jscoverage['tapi.js'][120]++;
  return this.api_dispatch(user).get_authorization_url(user, callback, context);
}), get_access_token: (function (user, callback, context) {
  _$jscoverage['tapi.js'][127]++;
  return this.api_dispatch(user).get_access_token(user, callback, context);
}), verify_credentials: (function (user, callback, context) {
  _$jscoverage['tapi.js'][134]++;
  return this.api_dispatch(user).verify_credentials(user, callback, context);
}), rate_limit_status: (function (data, callback, context) {
  _$jscoverage['tapi.js'][140]++;
  return this.api_dispatch(data).rate_limit_status(data, callback, context);
}), public_timeline: (function (data, callback, context) {
  _$jscoverage['tapi.js'][145]++;
  return this.api_dispatch(data).public_timeline(data, callback, context);
}), friends_timeline: (function (data, callback, context) {
  _$jscoverage['tapi.js'][151]++;
  var max_id = data.max_id;
  _$jscoverage['tapi.js'][152]++;
  return this.api_dispatch(data).friends_timeline(data, (function (err, statuses) {
  _$jscoverage['tapi.js'][153]++;
  if (err || ! max_id) {
    _$jscoverage['tapi.js'][154]++;
    return callback.call(context, err, statuses);
  }
  _$jscoverage['tapi.js'][156]++;
  max_id = String(max_id);
  _$jscoverage['tapi.js'][158]++;
  var needs = [];
  _$jscoverage['tapi.js'][159]++;
  for (var i = 0, l = statuses.length; i < l; i++) {
    _$jscoverage['tapi.js'][160]++;
    var status = statuses[i];
    _$jscoverage['tapi.js'][161]++;
    if (String(status.id) === max_id) {
      _$jscoverage['tapi.js'][162]++;
      continue;
    }
    _$jscoverage['tapi.js'][164]++;
    needs.push(status);
}
  _$jscoverage['tapi.js'][166]++;
  callback.call(context, null, needs);
}), this);
}), user_timeline: (function (data, callback, context) {
  _$jscoverage['tapi.js'][180]++;
  return this.api_dispatch(data).user_timeline(data, callback, context);
}), comments_timeline: (function (data, callback, context) {
  _$jscoverage['tapi.js'][190]++;
  return this.api_dispatch(data).comments_timeline(data, callback, context);
}), repost_timeline: (function (data, callback, context) {
  _$jscoverage['tapi.js'][201]++;
  return this.api_dispatch(data).repost_timeline(data, callback, context);
}), mentions: (function (data, callback, context) {
  _$jscoverage['tapi.js'][211]++;
  return this.api_dispatch(data).mentions(data, callback, context);
}), friends: (function (data, callback, context) {
  _$jscoverage['tapi.js'][224]++;
  return this.api_dispatch(data).friends(data, callback, context);
}), followers: (function (data, callback, context) {
  _$jscoverage['tapi.js'][229]++;
  return this.api_dispatch(data).followers(data, callback, context);
}), favorites: (function (data, callback, context) {
  _$jscoverage['tapi.js'][234]++;
  return this.api_dispatch(data).favorites(data, callback, context);
}), favorites_create: (function (data, callback, context) {
  _$jscoverage['tapi.js'][239]++;
  return this.api_dispatch(data).favorites_create(data, callback, context);
}), favorites_destroy: (function (data, callback, context) {
  _$jscoverage['tapi.js'][244]++;
  return this.api_dispatch(data).favorites_destroy(data, callback, context);
}), counts: (function (data, callback, context) {
  _$jscoverage['tapi.js'][249]++;
  return this.api_dispatch(data).counts(data, callback, context);
}), user_show: (function (data, callback, context) {
  _$jscoverage['tapi.js'][254]++;
  return this.api_dispatch(data).user_show(data, callback, context);
}), direct_messages: (function (data, callback, context) {
  _$jscoverage['tapi.js'][259]++;
  return this.api_dispatch(data).direct_messages(data, callback, context);
}), destroy_msg: (function (data, callback, context) {
  _$jscoverage['tapi.js'][264]++;
  return this.api_dispatch(data).destroy_msg(data, callback, context);
}), new_message: (function (data, callback, context) {
  _$jscoverage['tapi.js'][277]++;
  return this.api_dispatch(data).new_message(data, callback, context);
}), update: (function (data, callback, context) {
  _$jscoverage['tapi.js'][286]++;
  if (! data.pic) {
    _$jscoverage['tapi.js'][287]++;
    return this.api_dispatch(data).update(data, callback, context);
  }
  _$jscoverage['tapi.js'][290]++;
  var pic = data.pic;
  _$jscoverage['tapi.js'][291]++;
  delete data.pic;
  _$jscoverage['tapi.js'][292]++;
  return this.api_dispatch(data).upload(data, pic, callback, context);
}), upload: (function (data, pic, callback, context) {
  _$jscoverage['tapi.js'][300]++;
  return this.api_dispatch(data).upload(data, pic, callback, context);
}), upload_pic_url: (function (data, pic, callback, context) {
  _$jscoverage['tapi.js'][304]++;
  return this.api_dispatch(data).upload_pic_url(data, pic, callback, context);
}), repost: (function (data, callback, context) {
  _$jscoverage['tapi.js'][311]++;
  return this.api_dispatch(data).repost(data, callback, context);
}), comment: (function (data, callback, context) {
  _$jscoverage['tapi.js'][319]++;
  return this.api_dispatch(data).comment(data, callback, context);
}), reply: (function (data, callback, context) {
  _$jscoverage['tapi.js'][328]++;
  return this.api_dispatch(data).reply(data, callback, context);
}), comments: (function (data, callback, context) {
  _$jscoverage['tapi.js'][335]++;
  return this.api_dispatch(data).comments(data, callback, context);
}), comment_destroy: (function (data, callback, context) {
  _$jscoverage['tapi.js'][340]++;
  return this.api_dispatch(data).comment_destroy(data, callback, context);
}), friendships_create: (function (data, callback, context) {
  _$jscoverage['tapi.js'][347]++;
  return this.api_dispatch(data).friendships_create(data, callback, context);
}), friendships_destroy: (function (data, callback, context) {
  _$jscoverage['tapi.js'][352]++;
  return this.api_dispatch(data).friendships_destroy(data, callback, context);
}), friendships_show: (function (data, callback, context) {
  _$jscoverage['tapi.js'][360]++;
  return this.api_dispatch(data).friendships_show(data, callback, context);
}), reset_count: (function (data, callback, context) {
  _$jscoverage['tapi.js'][365]++;
  return this.api_dispatch(data).reset_count(data, callback, context);
}), retweet: (function (data, callback, context) {
  _$jscoverage['tapi.js'][370]++;
  return this.api_dispatch(data).retweet(data, callback, context);
}), destroy: (function (data, callback, context) {
  _$jscoverage['tapi.js'][375]++;
  return this.api_dispatch(data).destroy(data, callback, context);
}), tags: (function (data, callback, context) {
  _$jscoverage['tapi.js'][380]++;
  return this.api_dispatch(data).tags(data, callback, context);
}), tags_suggestions: (function (data, callback, context) {
  _$jscoverage['tapi.js'][385]++;
  return this.api_dispatch(data).tags_suggestions(data, callback, context);
}), create_tag: (function (data, callback, context) {
  _$jscoverage['tapi.js'][390]++;
  return this.api_dispatch(data).create_tag(data, callback, context);
}), destroy_tag: (function (data, callback, context) {
  _$jscoverage['tapi.js'][395]++;
  return this.api_dispatch(data).destroy_tag(data, callback, context);
}), status_show: (function (data, callback, context) {
  _$jscoverage['tapi.js'][400]++;
  return this.api_dispatch(data).status_show(data, callback, context);
}), emotions: (function (data, callback, context) {
  _$jscoverage['tapi.js'][405]++;
  return this.api_dispatch(data).emotions(data, callback, context);
})});
})();
_$jscoverage['tapi.js'].source = ["(function () {","","var TAPI = {};","var utils;","var root = this; // window on browser","if (typeof module === 'undefined') {","  root.weibo.TAPI = TAPI;","  utils = root.weibo.utils;","} else {","  module.exports = TAPI;","  utils = require('./utils');","}","","var TSinaAPI;","var TwitterAPI;","var TQQAPI;","var TSOHUAPI;","","if (typeof require !== 'undefined') {","  TSinaAPI = require('./tsina');","  // TwitterAPI = require('./twitter');","  // TQQAPI = require('./tqq');","  // TSOHUAPI = require('./tsohu');","} else {","  TSinaAPI = root.weibo.TSinaAPI;","  TwitterAPI = root.weibo.TwitterAPI;","  TQQAPI = root.weibo.TQQAPI;","  TSOHUAPI = root.weibo.TSOHUAPI;","}","","// &#229;&#176;&#129;&#232;&#163;&#133;&#229;&#133;&#188;&#229;&#174;&#185;&#230;&#137;&#128;&#230;&#156;&#137;&#229;&#190;&#174;&#229;&#141;&#154;&#231;&#154;&#132;api&#239;&#188;&#140;&#232;&#135;&#170;&#229;&#138;&#168;&#229;&#136;&#164;&#230;&#150;&#173;&#229;&#190;&#174;&#229;&#141;&#154;&#231;&#177;&#187;&#229;&#158;&#139;","utils.extend(TAPI, {","  ","  TYPES: {","    tsina: TSinaAPI,","    weibo: TSinaAPI, // alias to tsina","    // twitter: TwitterAPI,","    // tqq: TQQAPI ,","    // tsohu: TSOHUAPI ","  },","  ","  enables: {},","  ","  init: function (blogtype, appkey, secret, oauth_callback_url) {","    if (!appkey) {","      throw new Error('appkey must be set');","    }","    var api = this.TYPES[blogtype];","    if (!api) {","      throw new Error(blogtype + ' api not exists');","    }","    api.config.source = api.config.oauth_key = appkey;","    api.config.oauth_secret = secret;","    this.enables[blogtype] = true;","    if (oauth_callback_url) {","      api.config.oauth_callback = oauth_callback_url;","    }","  },","","  // &#232;&#135;&#170;&#229;&#138;&#168;&#229;&#136;&#164;&#230;&#150;&#173;&#229;&#189;&#147;&#229;&#137;&#141;&#231;&#148;&#168;&#230;&#136;&#183;&#230;&#137;&#128;&#228;&#189;&#191;&#231;&#148;&#168;&#231;&#154;&#132;api, &#230;&#160;&#185;&#230;&#141;&#174;user.blogType&#229;&#136;&#164;&#230;&#150;&#173;","  api_dispatch: function (data) {","    var user = data.user || data;","    if (user &amp;&amp; !user.blogType) {","      // &#229;&#133;&#188;&#229;&#174;&#185;user.blogtype","      user.blogType = user.blogtype;","    }","    return this.TYPES[user.blogType || 'tsina'];","  },","  ","  // &#232;&#142;&#183;&#229;&#143;&#150;&#233;&#133;&#141;&#231;&#189;&#174;&#228;&#191;&#161;&#230;&#129;&#175;","  get_config: function (user) {","    return this.api_dispatch(user).config;","  },","  ","  /* &#232;&#191;&#148;&#229;&#155;&#158;&#228;&#184;&#142;&#229;&#133;&#179;&#233;&#148;&#174;&#229;&#173;&#151;&#231;&#155;&#184;&#229;&#140;&#185;&#233;&#133;&#141;&#231;&#154;&#132;&#229;&#190;&#174;&#229;&#141;&#154;&#227;&#128;&#130;&#230;&#156;&#170;&#230;&#150;&#176;&#230;&#181;&#170;&#229;&#144;&#136;&#228;&#189;&#156;key&#229;&#143;&#170;&#232;&#131;&#189;&#232;&#191;&#148;&#229;&#155;&#158;&#231;&#172;&#172;&#228;&#184;&#128;&#233;&#161;&#181;","   * q  true  string  &#230;&#144;&#156;&#231;&#180;&#162;&#231;&#154;&#132;&#229;&#133;&#179;&#233;&#148;&#174;&#229;&#173;&#151;&#227;&#128;&#130;&#229;&#191;&#133;&#233;&#161;&#187;&#232;&#191;&#155;&#232;&#161;&#140;URL Encode","   * page false int &#233;&#161;&#181;&#231;&#160;&#129;&#239;&#188;&#140;&#228;&#187;&#142;1&#229;&#188;&#128;&#229;&#167;&#139;&#239;&#188;&#140;&#233;&#187;&#152;&#232;&#174;&#164;&#228;&#184;&#186;1&#227;&#128;&#130;","   * rpp  false int &#230;&#175;&#143;&#233;&#161;&#181;&#232;&#191;&#148;&#229;&#155;&#158;&#231;&#154;&#132;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#149;&#176;&#227;&#128;&#130;&#239;&#188;&#136;&#233;&#187;&#152;&#232;&#174;&#164;&#232;&#191;&#148;&#229;&#155;&#158;10&#230;&#157;&#161;&#239;&#188;&#140;&#230;&#156;&#128;&#229;&#164;&#167;200&#230;&#157;&#161;&#239;&#188;&#137;","   * geocode  false string  &#232;&#191;&#148;&#229;&#155;&#158;&#230;&#140;&#135;&#229;&#174;&#154;&#231;&#187;&#143;&#231;&#186;&#172;&#229;&#186;&#166;&#233;&#153;&#132;&#232;&#191;&#145;&#231;&#154;&#132;&#228;&#191;&#161;&#230;&#129;&#175;&#227;&#128;&#130;&#231;&#187;&#143;&#231;&#186;&#172;&#229;&#186;&#166;&#229;&#143;&#130;&#230;&#149;&#176;&#230;&#160;&#188;&#229;&#188;&#143;&#230;&#152;&#175;&#226;&#128;&#156;&#231;&#186;&#172;&#229;&#186;&#166;&#239;&#188;&#140;&#231;&#187;&#143;&#229;&#186;&#166;&#239;&#188;&#140;&#229;&#141;&#138;&#229;&#190;&#132;&#226;&#128;&#157;&#239;&#188;&#140;&#229;&#141;&#138;&#229;&#190;&#132;&#230;&#148;&#175;&#230;&#140;&#129;km&#239;&#188;&#136;&#229;&#133;&#172;&#233;&#135;&#140;&#239;&#188;&#137;&#239;&#188;&#140;m&#239;&#188;&#136;&#231;&#177;&#179;&#239;&#188;&#137;&#239;&#188;&#140;mi&#239;&#188;&#136;&#232;&#139;&#177;&#233;&#135;&#140;&#239;&#188;&#137;&#227;&#128;&#130;&#230;&#160;&#188;&#229;&#188;&#143;&#233;&#156;&#128;&#232;&#166;&#129;URL Encode&#231;&#188;&#150;&#231;&#160;&#129;","   */","  search: function (data, callback, context) {","    return this.api_dispatch(data).search(data, callback, context);","  },","  ","  /* google &#231;&#191;&#187;&#232;&#175;&#145;api","   * text, target &#231;&#155;&#174;&#230;&#160;&#135;&#232;&#175;&#173;&#232;&#168;&#128;","   */","  translate: function (user, text, target, callback, context) {","    return this.api_dispatch(user).translate(text, target, callback, context);","  },","  ","  /** ","   * &#232;&#142;&#183;&#229;&#143;&#150;&#231;&#148;&#168;&#230;&#136;&#183;&#232;&#174;&#164;&#232;&#175;&#129;url","   * oauth_callback_url: &#232;&#174;&#164;&#232;&#175;&#129;&#229;&#144;&#142;&#229;&#155;&#158;&#232;&#183;&#179;url","   * callback(err, auth_token)","   *  - {Object} auth_token: {","   *    auth_url: 'http://xxxx/auth?xxx',","   *    oauth_token: $oauth_token,","   *    oauth_token_secret: $oauth_token_secret","   *  }","   */","  /**","   * Get authorization token and login url.","   * ","   * @param {Object} user","   * - {Object} user: {","   *   blogType: 'tsina' or other blog type,","   *   oauth_callback: 'login callback url' or 'oob'","   * }","   * @param {Function(err, auth_info)} callback","   * - {Object} auth_token: {","   *   auth_url: 'http://xxxx/auth?xxx',","   *   oauth_token_key: $oauth_token_key,","   *   oauth_token_secret: $oauth_token_secret","   * }","   * @param {Object} [context]","   * @return {Object} blogType api.","   */","  get_authorization_url: function (user, callback, context) {","    return this.api_dispatch(user).get_authorization_url(user, callback, context);","  },","  ","  /** ","   * &#232;&#142;&#183;&#229;&#143;&#150;access token","   */","  get_access_token: function (user, callback, context) {","    return this.api_dispatch(user).get_access_token(user, callback, context);","  },","  ","  /* ","   * &#233;&#170;&#140;&#232;&#175;&#129;&#231;&#148;&#168;&#230;&#136;&#183;&#230;&#152;&#175;&#229;&#144;&#166;&#229;&#183;&#178;&#231;&#187;&#143;&#229;&#188;&#128;&#233;&#128;&#154;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#156;&#141;&#229;&#138;&#161;&#227;&#128;&#130;&#229;&#185;&#182;&#232;&#191;&#148;&#229;&#155;&#158;&#231;&#148;&#168;&#230;&#136;&#183;&#228;&#191;&#161;&#230;&#129;&#175;&#229;&#146;&#140;&#230;&#156;&#128;&#230;&#150;&#176;&#231;&#154;&#132;&#228;&#184;&#128;&#230;&#157;&#161;&#229;&#190;&#174;&#229;&#141;&#154;","   */","  verify_credentials: function (user, callback, context) {","    return this.api_dispatch(user).verify_credentials(user, callback, context);","  },","    ","  /* &#232;&#142;&#183;&#229;&#143;&#150;API&#231;&#154;&#132;&#232;&#174;&#191;&#233;&#151;&#174;&#233;&#162;&#145;&#231;&#142;&#135;&#233;&#153;&#144;&#229;&#136;&#182;&#227;&#128;&#130;&#232;&#191;&#148;&#229;&#155;&#158;&#229;&#189;&#147;&#229;&#137;&#141;&#229;&#176;&#143;&#230;&#151;&#182;&#229;&#134;&#133;&#232;&#191;&#152;&#232;&#131;&#189;&#232;&#174;&#191;&#233;&#151;&#174;&#231;&#154;&#132;&#230;&#172;&#161;&#230;&#149;&#176;&#227;&#128;&#130;","   */","  rate_limit_status: function (data, callback, context) {","    return this.api_dispatch(data).rate_limit_status(data, callback, context);","  },","  ","  // count, base_app: 0 all, 1 current app","  public_timeline: function (data, callback, context) {","    return this.api_dispatch(data).public_timeline(data, callback, context);","  },","","  // since_id, max_id, count, page ","  // home_timeline in twitter","  friends_timeline: function (data, callback, context) {","    var max_id = data.max_id;","    return this.api_dispatch(data).friends_timeline(data, function (err, statuses) {","      if (err || !max_id) {","        return callback.call(context, err, statuses);","      }","      max_id = String(max_id);","      // ignore the max_id status","      var needs = [];","      for (var i = 0, l = statuses.length; i &lt; l; i++) {","        var status = statuses[i];","        if (String(status.id) === max_id) {","          continue;","        }","        needs.push(status);","      }","      callback.call(context, null, needs);","    }, this);","  },","  ","  /* ","   * id&#227;&#128;&#129;user_id&#227;&#128;&#129;screen_name&#228;&#184;&#137;&#228;&#184;&#170;&#229;&#143;&#130;&#230;&#149;&#176;&#229;&#157;&#135;&#230;&#156;&#170;&#230;&#140;&#135;&#229;&#174;&#154;&#239;&#188;&#140;&#229;&#136;&#153;&#232;&#191;&#148;&#229;&#155;&#158;&#229;&#189;&#147;&#229;&#137;&#141;&#231;&#153;&#187;&#229;&#189;&#149;&#231;&#148;&#168;&#230;&#136;&#183;&#230;&#156;&#128;&#232;&#191;&#145;&#229;&#143;&#145;&#232;&#161;&#168;&#231;&#154;&#132;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#182;&#136;&#230;&#129;&#175;&#229;&#136;&#151;&#232;&#161;&#168;&#227;&#128;&#130;","   * since_id false int64 &#232;&#139;&#165;&#230;&#140;&#135;&#229;&#174;&#154;&#230;&#173;&#164;&#229;&#143;&#130;&#230;&#149;&#176;&#239;&#188;&#140;&#229;&#136;&#153;&#229;&#143;&#170;&#232;&#191;&#148;&#229;&#155;&#158;ID&#230;&#175;&#148;since_id&#229;&#164;&#167;&#239;&#188;&#136;&#229;&#141;&#179;&#230;&#175;&#148;since_id&#229;&#143;&#145;&#232;&#161;&#168;&#230;&#151;&#182;&#233;&#151;&#180;&#230;&#153;&#154;&#231;&#154;&#132;&#239;&#188;&#137;&#231;&#154;&#132;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#182;&#136;&#230;&#129;&#175;&#227;&#128;&#130;","   * max_id false int64 &#232;&#139;&#165;&#230;&#140;&#135;&#229;&#174;&#154;&#230;&#173;&#164;&#229;&#143;&#130;&#230;&#149;&#176;&#239;&#188;&#140;&#229;&#136;&#153;&#232;&#191;&#148;&#229;&#155;&#158;ID&#229;&#176;&#143;&#228;&#186;&#142;&#230;&#136;&#150;&#231;&#173;&#137;&#228;&#186;&#142;max_id&#231;&#154;&#132;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#182;&#136;&#230;&#129;&#175;","   * count  false int&#239;&#188;&#140;&#233;&#187;&#152;&#232;&#174;&#164;&#229;&#128;&#188;20&#239;&#188;&#140;&#230;&#156;&#128;&#229;&#164;&#167;&#229;&#128;&#188;200&#227;&#128;&#130; &#230;&#140;&#135;&#229;&#174;&#154;&#230;&#175;&#143;&#233;&#161;&#181;&#232;&#191;&#148;&#229;&#155;&#158;&#231;&#154;&#132;&#232;&#174;&#176;&#229;&#189;&#149;&#230;&#157;&#161;&#230;&#149;&#176;&#227;&#128;&#130;","   * page false int&#239;&#188;&#140;&#233;&#187;&#152;&#232;&#174;&#164;&#229;&#128;&#188;1&#227;&#128;&#130; &#233;&#161;&#181;&#231;&#160;&#129;&#227;&#128;&#130;&#230;&#179;&#168;&#230;&#132;&#143;&#239;&#188;&#154;&#230;&#156;&#128;&#229;&#164;&#154;&#232;&#191;&#148;&#229;&#155;&#158;200&#230;&#157;&#161;&#229;&#136;&#134;&#233;&#161;&#181;&#229;&#134;&#133;&#229;&#174;&#185;&#227;&#128;&#130;","   * base_app false int &#230;&#152;&#175;&#229;&#144;&#166;&#229;&#159;&#186;&#228;&#186;&#142;&#229;&#189;&#147;&#229;&#137;&#141;&#229;&#186;&#148;&#231;&#148;&#168;&#230;&#157;&#165;&#232;&#142;&#183;&#229;&#143;&#150;&#230;&#149;&#176;&#230;&#141;&#174;&#227;&#128;&#130;1&#228;&#184;&#186;&#233;&#153;&#144;&#229;&#136;&#182;&#230;&#156;&#172;&#229;&#186;&#148;&#231;&#148;&#168;&#229;&#190;&#174;&#229;&#141;&#154;&#239;&#188;&#140;0&#228;&#184;&#186;&#228;&#184;&#141;&#229;&#129;&#154;&#233;&#153;&#144;&#229;&#136;&#182;&#227;&#128;&#130;","   * feature  false int &#229;&#190;&#174;&#229;&#141;&#154;&#231;&#177;&#187;&#229;&#158;&#139;&#239;&#188;&#140;0&#229;&#133;&#168;&#233;&#131;&#168;&#239;&#188;&#140;1&#229;&#142;&#159;&#229;&#136;&#155;&#239;&#188;&#140;2&#229;&#155;&#190;&#231;&#137;&#135;&#239;&#188;&#140;3&#232;&#167;&#134;&#233;&#162;&#145;&#239;&#188;&#140;4&#233;&#159;&#179;&#228;&#185;&#144;. &#232;&#191;&#148;&#229;&#155;&#158;&#230;&#140;&#135;&#229;&#174;&#154;&#231;&#177;&#187;&#229;&#158;&#139;&#231;&#154;&#132;&#229;&#190;&#174;&#229;&#141;&#154;&#228;&#191;&#161;&#230;&#129;&#175;&#229;&#134;&#133;&#229;&#174;&#185;&#227;&#128;&#130;","   */","  user_timeline: function (data, callback, context) {","    return this.api_dispatch(data).user_timeline(data, callback, context);","  },","  ","  /* &#232;&#191;&#148;&#229;&#155;&#158;&#230;&#156;&#128;&#230;&#150;&#176;n&#230;&#157;&#161;&#229;&#143;&#145;&#233;&#128;&#129;&#229;&#143;&#138;&#230;&#148;&#182;&#229;&#136;&#176;&#231;&#154;&#132;&#232;&#175;&#132;&#232;&#174;&#186;&#227;&#128;&#130;","   * since_id false int64 &#232;&#139;&#165;&#230;&#140;&#135;&#229;&#174;&#154;&#230;&#173;&#164;&#229;&#143;&#130;&#230;&#149;&#176;&#239;&#188;&#140;&#229;&#136;&#153;&#229;&#143;&#170;&#232;&#191;&#148;&#229;&#155;&#158;ID&#230;&#175;&#148;since_id&#229;&#164;&#167;&#231;&#154;&#132;&#232;&#175;&#132;&#232;&#174;&#186;&#239;&#188;&#136;&#230;&#175;&#148;since_id&#229;&#143;&#145;&#232;&#161;&#168;&#230;&#151;&#182;&#233;&#151;&#180;&#230;&#153;&#154;&#239;&#188;&#137;&#227;&#128;&#130;","   * max_id false int64 &#232;&#139;&#165;&#230;&#140;&#135;&#229;&#174;&#154;&#230;&#173;&#164;&#229;&#143;&#130;&#230;&#149;&#176;&#239;&#188;&#140;&#229;&#136;&#153;&#232;&#191;&#148;&#229;&#155;&#158;ID&#229;&#176;&#143;&#228;&#186;&#142;&#230;&#136;&#150;&#231;&#173;&#137;&#228;&#186;&#142;max_id&#231;&#154;&#132;&#232;&#175;&#132;&#232;&#174;&#186;","   * count  false int&#239;&#188;&#140;&#233;&#187;&#152;&#232;&#174;&#164;&#229;&#128;&#188;20&#239;&#188;&#140;&#230;&#156;&#128;&#229;&#164;&#167;&#229;&#128;&#188;200&#227;&#128;&#130; &#229;&#141;&#149;&#233;&#161;&#181;&#232;&#191;&#148;&#229;&#155;&#158;&#231;&#154;&#132;&#232;&#174;&#176;&#229;&#189;&#149;&#230;&#157;&#161;&#230;&#149;&#176;&#227;&#128;&#130;","   * page false int&#239;&#188;&#140;&#233;&#187;&#152;&#232;&#174;&#164;&#229;&#128;&#188;1&#227;&#128;&#130; &#232;&#191;&#148;&#229;&#155;&#158;&#231;&#187;&#147;&#230;&#158;&#156;&#231;&#154;&#132;&#233;&#161;&#181;&#231;&#160;&#129;&#227;&#128;&#130;&#230;&#179;&#168;&#230;&#132;&#143;&#239;&#188;&#154;&#230;&#156;&#137;&#229;&#136;&#134;&#233;&#161;&#181;&#233;&#153;&#144;&#229;&#136;&#182;&#227;&#128;&#130;","   */","  comments_timeline: function (data, callback, context) {","    return this.api_dispatch(data).comments_timeline(data, callback, context);","  },","  ","  /* &#232;&#191;&#148;&#229;&#155;&#158;&#228;&#184;&#128;&#230;&#157;&#161;&#229;&#142;&#159;&#229;&#136;&#155;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#182;&#136;&#230;&#129;&#175;&#231;&#154;&#132;&#230;&#156;&#128;&#230;&#150;&#176;n&#230;&#157;&#161;&#232;&#189;&#172;&#229;&#143;&#145;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#182;&#136;&#230;&#129;&#175;&#227;&#128;&#130;&#230;&#156;&#172;&#230;&#142;&#165;&#229;&#143;&#163;&#230;&#151;&#160;&#230;&#179;&#149;&#229;&#175;&#185;&#233;&#157;&#158;&#229;&#142;&#159;&#229;&#136;&#155;&#229;&#190;&#174;&#229;&#141;&#154;&#232;&#191;&#155;&#232;&#161;&#140;&#230;&#159;&#165;&#232;&#175;&#162;&#227;&#128;&#130;","   * id true  int64 &#232;&#166;&#129;&#232;&#142;&#183;&#229;&#143;&#150;&#232;&#189;&#172;&#229;&#143;&#145;&#229;&#190;&#174;&#229;&#141;&#154;&#229;&#136;&#151;&#232;&#161;&#168;&#231;&#154;&#132;&#229;&#142;&#159;&#229;&#136;&#155;&#229;&#190;&#174;&#229;&#141;&#154;ID&#227;&#128;&#130;","   * since_id false int64 &#232;&#139;&#165;&#230;&#140;&#135;&#229;&#174;&#154;&#230;&#173;&#164;&#229;&#143;&#130;&#230;&#149;&#176;&#239;&#188;&#140;&#229;&#136;&#153;&#229;&#143;&#170;&#232;&#191;&#148;&#229;&#155;&#158;ID&#230;&#175;&#148;since_id&#229;&#164;&#167;&#231;&#154;&#132;&#232;&#174;&#176;&#229;&#189;&#149;&#239;&#188;&#136;&#230;&#175;&#148;since_id&#229;&#143;&#145;&#232;&#161;&#168;&#230;&#151;&#182;&#233;&#151;&#180;&#230;&#153;&#154;&#239;&#188;&#137;&#227;&#128;&#130;","   * max_id false int64 &#232;&#139;&#165;&#230;&#140;&#135;&#229;&#174;&#154;&#230;&#173;&#164;&#229;&#143;&#130;&#230;&#149;&#176;&#239;&#188;&#140;&#229;&#136;&#153;&#232;&#191;&#148;&#229;&#155;&#158;ID&#229;&#176;&#143;&#228;&#186;&#142;&#230;&#136;&#150;&#231;&#173;&#137;&#228;&#186;&#142;max_id&#231;&#154;&#132;&#232;&#174;&#176;&#229;&#189;&#149;","   * count  false int&#239;&#188;&#140;&#233;&#187;&#152;&#232;&#174;&#164;&#229;&#128;&#188;20&#239;&#188;&#140;&#230;&#156;&#128;&#229;&#164;&#167;&#229;&#128;&#188;200&#227;&#128;&#130; &#229;&#141;&#149;&#233;&#161;&#181;&#232;&#191;&#148;&#229;&#155;&#158;&#231;&#154;&#132;&#232;&#174;&#176;&#229;&#189;&#149;&#230;&#157;&#161;&#230;&#149;&#176;&#227;&#128;&#130;","   * page false int&#239;&#188;&#140;&#233;&#187;&#152;&#232;&#174;&#164;&#229;&#128;&#188;1&#227;&#128;&#130; &#232;&#191;&#148;&#229;&#155;&#158;&#231;&#187;&#147;&#230;&#158;&#156;&#231;&#154;&#132;&#233;&#161;&#181;&#231;&#160;&#129;&#227;&#128;&#130;","   */","  repost_timeline: function (data, callback, context) {","    return this.api_dispatch(data).repost_timeline(data, callback, context);","  },","  ","  /*","   * since_id false int64 &#232;&#139;&#165;&#230;&#140;&#135;&#229;&#174;&#154;&#230;&#173;&#164;&#229;&#143;&#130;&#230;&#149;&#176;&#239;&#188;&#140;&#229;&#136;&#153;&#229;&#143;&#170;&#232;&#191;&#148;&#229;&#155;&#158;ID&#230;&#175;&#148;since_id&#229;&#164;&#167;&#231;&#154;&#132;&#230;&#143;&#144;&#229;&#136;&#176;&#229;&#189;&#147;&#229;&#137;&#141;&#231;&#153;&#187;&#229;&#189;&#149;&#231;&#148;&#168;&#230;&#136;&#183;&#231;&#154;&#132;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#182;&#136;&#230;&#129;&#175;&#239;&#188;&#136;&#230;&#175;&#148;since_id&#229;&#143;&#145;&#232;&#161;&#168;&#230;&#151;&#182;&#233;&#151;&#180;&#230;&#153;&#154;&#239;&#188;&#137;&#227;&#128;&#130;","   * max_id false int64 &#232;&#139;&#165;&#230;&#140;&#135;&#229;&#174;&#154;&#230;&#173;&#164;&#229;&#143;&#130;&#230;&#149;&#176;&#239;&#188;&#140;&#229;&#136;&#153;&#232;&#191;&#148;&#229;&#155;&#158;ID&#229;&#176;&#143;&#228;&#186;&#142;&#230;&#136;&#150;&#231;&#173;&#137;&#228;&#186;&#142;max_id&#231;&#154;&#132;&#230;&#143;&#144;&#229;&#136;&#176;&#229;&#189;&#147;&#229;&#137;&#141;&#231;&#153;&#187;&#229;&#189;&#149;&#231;&#148;&#168;&#230;&#136;&#183;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#182;&#136;&#230;&#129;&#175;","   * count  false int&#239;&#188;&#140;&#233;&#187;&#152;&#232;&#174;&#164;&#229;&#128;&#188;20&#239;&#188;&#140;&#230;&#156;&#128;&#229;&#164;&#167;&#229;&#128;&#188;200&#227;&#128;&#130; &#229;&#141;&#149;&#233;&#161;&#181;&#232;&#191;&#148;&#229;&#155;&#158;&#231;&#154;&#132;&#232;&#174;&#176;&#229;&#189;&#149;&#230;&#157;&#161;&#230;&#149;&#176;&#227;&#128;&#130;","   * page false int&#239;&#188;&#140;&#233;&#187;&#152;&#232;&#174;&#164;&#229;&#128;&#188;1&#227;&#128;&#130; &#232;&#191;&#148;&#229;&#155;&#158;&#231;&#187;&#147;&#230;&#158;&#156;&#231;&#154;&#132;&#233;&#161;&#181;&#231;&#160;&#129;&#227;&#128;&#130;&#230;&#179;&#168;&#230;&#132;&#143;&#239;&#188;&#154;&#230;&#156;&#137;&#229;&#136;&#134;&#233;&#161;&#181;&#233;&#153;&#144;&#229;&#136;&#182;&#227;&#128;&#130;","   */","  mentions: function (data, callback, context) {","    return this.api_dispatch(data).mentions(data, callback, context);","  },","  ","  /*","   * id false int64/string  &#231;&#148;&#168;&#230;&#136;&#183;ID(int64)&#230;&#136;&#150;&#232;&#128;&#133;&#230;&#152;&#181;&#231;&#167;&#176;(string)&#227;&#128;&#130;&#232;&#175;&#165;&#229;&#143;&#130;&#230;&#149;&#176;&#228;&#184;&#186;&#228;&#184;&#128;&#228;&#184;&#170;REST&#233;&#163;&#142;&#230;&#160;&#188;&#229;&#143;&#130;&#230;&#149;&#176;&#227;&#128;&#130;&#232;&#176;&#131;&#231;&#148;&#168;&#231;&#164;&#186;&#228;&#190;&#139;&#232;&#167;&#129;&#230;&#179;&#168;&#230;&#132;&#143;&#228;&#186;&#139;&#233;&#161;&#185;","   * user_id  false int64 &#231;&#148;&#168;&#230;&#136;&#183;ID&#239;&#188;&#140;&#228;&#184;&#187;&#232;&#166;&#129;&#230;&#152;&#175;&#231;&#148;&#168;&#230;&#157;&#165;&#229;&#140;&#186;&#229;&#136;&#134;&#231;&#148;&#168;&#230;&#136;&#183;ID&#232;&#183;&#159;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#152;&#181;&#231;&#167;&#176;&#227;&#128;&#130;&#229;&#189;&#147;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#152;&#181;&#231;&#167;&#176;&#228;&#184;&#186;&#230;&#149;&#176;&#229;&#173;&#151;&#229;&#175;&#188;&#232;&#135;&#180;&#229;&#146;&#140;&#231;&#148;&#168;&#230;&#136;&#183;ID&#228;&#186;&#167;&#231;&#148;&#159;&#230;&#173;&#167;&#228;&#185;&#137;&#239;&#188;&#140;&#231;&#137;&#185;&#229;&#136;&#171;&#230;&#152;&#175;&#229;&#189;&#147;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#152;&#181;&#231;&#167;&#176;&#229;&#146;&#140;&#231;&#148;&#168;&#230;&#136;&#183;ID&#228;&#184;&#128;&#230;&#160;&#183;&#231;&#154;&#132;&#230;&#151;&#182;&#229;&#128;&#153;&#239;&#188;&#140;&#229;&#187;&#186;&#232;&#174;&#174;&#228;&#189;&#191;&#231;&#148;&#168;&#232;&#175;&#165;&#229;&#143;&#130;&#230;&#149;&#176;","   * screen_name  false string  &#229;&#190;&#174;&#229;&#141;&#154;&#230;&#152;&#181;&#231;&#167;&#176;&#239;&#188;&#140;&#228;&#184;&#187;&#232;&#166;&#129;&#230;&#152;&#175;&#231;&#148;&#168;&#230;&#157;&#165;&#229;&#140;&#186;&#229;&#136;&#134;&#231;&#148;&#168;&#230;&#136;&#183;UID&#232;&#183;&#159;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#152;&#181;&#231;&#167;&#176;&#239;&#188;&#140;&#229;&#189;&#147;&#228;&#186;&#140;&#232;&#128;&#133;&#228;&#184;&#128;&#230;&#160;&#183;&#232;&#128;&#140;&#228;&#186;&#167;&#231;&#148;&#159;&#230;&#173;&#167;&#228;&#185;&#137;&#231;&#154;&#132;&#230;&#151;&#182;&#229;&#128;&#153;&#239;&#188;&#140;&#229;&#187;&#186;&#232;&#174;&#174;&#228;&#189;&#191;&#231;&#148;&#168;&#232;&#175;&#165;&#229;&#143;&#130;&#230;&#149;&#176;","   * id, user_id, screen_name &#229;&#143;&#175;&#228;&#187;&#165;&#228;&#187;&#187;&#233;&#128;&#137;&#228;&#184;&#128;&#228;&#184;&#170;&#229;&#143;&#130;&#230;&#149;&#176;&#239;&#188;&#140;&#229;&#156;&#168;3&#228;&#184;&#170;&#233;&#131;&#189;&#228;&#184;&#141;&#230;&#143;&#144;&#228;&#190;&#155;&#231;&#154;&#132;&#230;&#131;&#133;&#229;&#134;&#181;&#228;&#184;&#139;&#239;&#188;&#140;&#231;&#179;&#187;&#231;&#187;&#159;&#232;&#191;&#148;&#229;&#155;&#158;&#229;&#189;&#147;&#229;&#137;&#141;&#231;&#153;&#187;&#229;&#189;&#149;&#231;&#148;&#168;&#230;&#136;&#183;&#231;&#154;&#132;&#229;&#133;&#179;&#230;&#179;&#168;&#229;&#136;&#151;&#232;&#161;&#168;","   * ","   * cursor false int &#231;&#148;&#168;&#228;&#186;&#142;&#229;&#136;&#134;&#233;&#161;&#181;&#232;&#175;&#183;&#230;&#177;&#130;&#239;&#188;&#140;&#232;&#175;&#183;&#230;&#177;&#130;&#231;&#172;&#172;1&#233;&#161;&#181;cursor&#228;&#188;&#160;-1&#239;&#188;&#140;&#229;&#156;&#168;&#232;&#191;&#148;&#229;&#155;&#158;&#231;&#154;&#132;&#231;&#187;&#147;&#230;&#158;&#156;&#228;&#184;&#173;&#228;&#188;&#154;&#229;&#190;&#151;&#229;&#136;&#176;next_cursor&#229;&#173;&#151;&#230;&#174;&#181;&#239;&#188;&#140;&#232;&#161;&#168;&#231;&#164;&#186;&#228;&#184;&#139;&#228;&#184;&#128;&#233;&#161;&#181;&#231;&#154;&#132;cursor&#227;&#128;&#130;next_cursor&#228;&#184;&#186;0&#232;&#161;&#168;&#231;&#164;&#186;&#229;&#183;&#178;&#231;&#187;&#143;&#229;&#136;&#176;&#232;&#174;&#176;&#229;&#189;&#149;&#230;&#156;&#171;&#229;&#176;&#190;&#227;&#128;&#130;","   * count  false int&#239;&#188;&#140;&#233;&#187;&#152;&#232;&#174;&#164;20&#239;&#188;&#140;&#230;&#156;&#128;&#229;&#164;&#167;200  &#230;&#175;&#143;&#233;&#161;&#181;&#232;&#191;&#148;&#229;&#155;&#158;&#231;&#154;&#132;&#230;&#156;&#128;&#229;&#164;&#167;&#232;&#174;&#176;&#229;&#189;&#149;&#230;&#149;&#176;&#239;&#188;&#140;&#230;&#156;&#128;&#229;&#164;&#167;&#228;&#184;&#141;&#232;&#131;&#189;&#232;&#182;&#133;&#232;&#191;&#135;200&#239;&#188;&#140;&#233;&#187;&#152;&#232;&#174;&#164;&#228;&#184;&#186;20&#227;&#128;&#130;","   */","  friends: function (data, callback, context) {","    return this.api_dispatch(data).friends(data, callback, context);","  },","  ","  // &#229;&#144;&#140;friends","  followers: function (data, callback, context) {","    return this.api_dispatch(data).followers(data, callback, context);","  },","  ","  // page","  favorites: function (data, callback, context) {","    return this.api_dispatch(data).favorites(data, callback, context);","  },","  ","  // id","  favorites_create: function (data, callback, context) {","    return this.api_dispatch(data).favorites_create(data, callback, context);","  },","  ","  // id","  favorites_destroy: function (data, callback, context) {","    return this.api_dispatch(data).favorites_destroy(data, callback, context);","  },","  ","  // ids: &#232;&#166;&#129;&#232;&#142;&#183;&#229;&#143;&#150;&#232;&#175;&#132;&#232;&#174;&#186;&#230;&#149;&#176;&#229;&#146;&#140;&#232;&#189;&#172;&#229;&#143;&#145;&#230;&#149;&#176;&#231;&#154;&#132;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#182;&#136;&#230;&#129;&#175;ID&#229;&#136;&#151;&#232;&#161;&#168;&#239;&#188;&#140;&#231;&#148;&#168;&#233;&#128;&#151;&#229;&#143;&#183;&#233;&#154;&#148;&#229;&#188;&#128;","  counts: function (data, callback, context) {","    return this.api_dispatch(data).counts(data, callback, context);","  },","  ","  // id","  user_show: function (data, callback, context) {","    return this.api_dispatch(data).user_show(data, callback, context);","  },","  ","  // since_id, max_id, count, page ","  direct_messages: function (data, callback, context) {","    return this.api_dispatch(data).direct_messages(data, callback, context);","  },","  ","  // id","  destroy_msg: function (data, callback, context) {","    return this.api_dispatch(data).destroy_msg(data, callback, context);","  },","  ","  /*","   * id true  int64/string  &#231;&#167;&#129;&#228;&#191;&#161;&#230;&#142;&#165;&#230;&#148;&#182;&#230;&#150;&#185;&#231;&#154;&#132;&#231;&#148;&#168;&#230;&#136;&#183;ID(int64)&#230;&#136;&#150;&#232;&#128;&#133;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#152;&#181;&#231;&#167;&#176;(string)","   * text true  string  &#232;&#166;&#129;&#229;&#143;&#145;&#231;&#148;&#159;&#231;&#154;&#132;&#230;&#182;&#136;&#230;&#129;&#175;&#229;&#134;&#133;&#229;&#174;&#185;&#239;&#188;&#140;&#233;&#156;&#128;&#232;&#166;&#129;&#229;&#129;&#154;URLEncode&#239;&#188;&#140;&#230;&#150;&#135;&#230;&#156;&#172;&#229;&#164;&#167;&#229;&#176;&#143;&#229;&#191;&#133;&#233;&#161;&#187;&#229;&#176;&#143;&#228;&#186;&#142;300&#228;&#184;&#170;&#230;&#177;&#137;&#229;&#173;&#151;&#227;&#128;&#130;","   * user_id  false int64 &#231;&#167;&#129;&#228;&#191;&#161;&#230;&#142;&#165;&#230;&#148;&#182;&#230;&#150;&#185;&#231;&#154;&#132;&#231;&#148;&#168;&#230;&#136;&#183;ID&#239;&#188;&#140;&#229;&#156;&#168;&#231;&#148;&#168;&#230;&#136;&#183;ID&#228;&#184;&#142;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#152;&#181;&#231;&#167;&#176;&#229;&#174;&#185;&#230;&#152;&#147;&#230;&#183;&#183;&#230;&#183;&#134;&#231;&#154;&#132;&#230;&#151;&#182;&#229;&#128;&#153;&#239;&#188;&#140;&#229;&#187;&#186;&#232;&#174;&#174;&#228;&#189;&#191;&#231;&#148;&#168;&#232;&#175;&#165;&#229;&#143;&#130;&#230;&#149;&#176;&#227;&#128;&#130;","   * screen_name  false string  &#231;&#167;&#129;&#228;&#191;&#161;&#230;&#142;&#165;&#230;&#148;&#182;&#230;&#150;&#185;&#231;&#154;&#132;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#152;&#181;&#231;&#167;&#176;&#239;&#188;&#140;&#229;&#156;&#168;&#231;&#148;&#168;&#230;&#136;&#183;ID&#228;&#184;&#142;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#152;&#181;&#231;&#167;&#176;&#229;&#174;&#185;&#230;&#152;&#147;&#230;&#183;&#183;&#230;&#183;&#134;&#231;&#154;&#132;&#230;&#151;&#182;&#229;&#128;&#153;&#239;&#188;&#140;&#229;&#187;&#186;&#232;&#174;&#174;&#228;&#189;&#191;&#231;&#148;&#168;&#232;&#175;&#165;&#229;&#143;&#130;&#230;&#149;&#176;&#227;&#128;&#130;","   * ","   * &#231;&#167;&#129;&#228;&#191;&#161;&#231;&#154;&#132;&#230;&#142;&#165;&#230;&#148;&#182;&#230;&#150;&#185;&#229;&#191;&#133;&#233;&#161;&#187;&#230;&#152;&#175;&#229;&#143;&#145;&#233;&#128;&#129;&#230;&#150;&#185;&#231;&#154;&#132;&#231;&#178;&#137;&#228;&#184;&#157;&#227;&#128;&#130;&#229;&#144;&#166;&#229;&#136;&#153;&#230;&#151;&#160;&#230;&#179;&#149;&#230;&#136;&#144;&#229;&#138;&#159;&#229;&#143;&#145;&#233;&#128;&#129;&#231;&#167;&#129;&#228;&#191;&#161;","   * &#231;&#179;&#187;&#231;&#187;&#159;&#232;&#191;&#148;&#229;&#155;&#158;400&#233;&#148;&#153;&#232;&#175;&#175;&#239;&#188;&#140;&#230;&#143;&#144;&#231;&#164;&#186;&#239;&#188;&#154;40017:Error: can't send direct message to user who is not your follower!","   */","  new_message: function (data, callback, context) {","    return this.api_dispatch(data).new_message(data, callback, context);","  },","  ","  /*","   * status, in_reply_to_status_id","   * lat, long: lat&#229;&#146;&#140;long&#229;&#143;&#130;&#230;&#149;&#176;&#233;&#156;&#128;&#233;&#133;&#141;&#229;&#144;&#136;&#228;&#189;&#191;&#231;&#148;&#168;&#239;&#188;&#140;&#231;&#148;&#168;&#228;&#186;&#142;&#230;&#160;&#135;&#232;&#174;&#176;&#229;&#143;&#145;&#232;&#161;&#168;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#182;&#136;&#230;&#129;&#175;&#230;&#151;&#182;&#230;&#137;&#128;&#229;&#156;&#168;&#231;&#154;&#132;&#229;&#156;&#176;&#231;&#144;&#134;&#228;&#189;&#141;&#231;&#189;&#174;&#239;&#188;&#140;&#229;&#143;&#170;&#230;&#156;&#137;&#231;&#148;&#168;&#230;&#136;&#183;&#232;&#174;&#190;&#231;&#189;&#174;&#228;&#184;&#173;geo_enabled=true&#230;&#151;&#182;&#229;&#128;&#153;&#229;&#156;&#176;&#231;&#144;&#134;&#228;&#189;&#141;&#231;&#189;&#174;&#228;&#191;&#161;&#230;&#129;&#175;&#230;&#137;&#141;&#230;&#156;&#137;&#230;&#149;&#136;&#227;&#128;&#130;","   * annotations: &#229;&#133;&#131;&#230;&#149;&#176;&#230;&#141;&#174;&#239;&#188;&#140;&#228;&#184;&#187;&#232;&#166;&#129;&#230;&#152;&#175;&#228;&#184;&#186;&#228;&#186;&#134;&#230;&#150;&#185;&#228;&#190;&#191;&#231;&#172;&#172;&#228;&#184;&#137;&#230;&#150;&#185;&#229;&#186;&#148;&#231;&#148;&#168;&#232;&#174;&#176;&#229;&#189;&#149;&#228;&#184;&#128;&#228;&#186;&#155;&#233;&#128;&#130;&#229;&#144;&#136;&#228;&#186;&#142;&#232;&#135;&#170;&#229;&#183;&#177;&#228;&#189;&#191;&#231;&#148;&#168;&#231;&#154;&#132;&#228;&#191;&#161;&#230;&#129;&#175;&#227;&#128;&#130;&#230;&#175;&#143;&#230;&#157;&#161;&#229;&#190;&#174;&#229;&#141;&#154;&#229;&#143;&#175;&#228;&#187;&#165;&#229;&#140;&#133;&#229;&#144;&#171;&#228;&#184;&#128;&#228;&#184;&#170;&#230;&#136;&#150;&#232;&#128;&#133;&#229;&#164;&#154;&#228;&#184;&#170;&#229;&#133;&#131;&#230;&#149;&#176;&#230;&#141;&#174;&#227;&#128;&#130;&#232;&#175;&#183;&#228;&#187;&#165;json&#229;&#173;&#151;&#228;&#184;&#178;&#231;&#154;&#132;&#229;&#189;&#162;&#229;&#188;&#143;&#230;&#143;&#144;&#228;&#186;&#164;&#239;&#188;&#140;&#229;&#173;&#151;&#228;&#184;&#178;&#233;&#149;&#191;&#229;&#186;&#166;&#228;&#184;&#141;&#232;&#182;&#133;&#232;&#191;&#135;512&#228;&#184;&#170;&#229;&#173;&#151;&#231;&#172;&#166;&#239;&#188;&#140;&#229;&#133;&#183;&#228;&#189;&#147;&#229;&#134;&#133;&#229;&#174;&#185;&#229;&#143;&#175;&#228;&#187;&#165;&#232;&#135;&#170;&#229;&#174;&#154;&#227;&#128;&#130;","   */","  update: function (data, callback, context) {","    if (!data.pic) {","      return this.api_dispatch(data).update(data, callback, context);","    }","    // &#229;&#140;&#133;&#229;&#144;&#171;&#229;&#155;&#190;&#231;&#137;&#135;","    var pic = data.pic;","    delete data.pic;","    return this.api_dispatch(data).upload(data, pic, callback, context);","  },","  ","  /*","   * status","   * pic: {keyname: 'pic', file: filepath} &#232;&#166;&#129;&#228;&#184;&#138;&#228;&#188;&#160;&#231;&#154;&#132;&#229;&#155;&#190;&#231;&#137;&#135;&#227;&#128;&#130;&#228;&#187;&#133;&#230;&#148;&#175;&#230;&#140;&#129;JPEG,GIF,PNG&#229;&#155;&#190;&#231;&#137;&#135;,&#228;&#184;&#186;&#231;&#169;&#186;&#232;&#191;&#148;&#229;&#155;&#158;400&#233;&#148;&#153;&#232;&#175;&#175;&#227;&#128;&#130;&#231;&#155;&#174;&#229;&#137;&#141;&#228;&#184;&#138;&#228;&#188;&#160;&#229;&#155;&#190;&#231;&#137;&#135;&#229;&#164;&#167;&#229;&#176;&#143;&#233;&#153;&#144;&#229;&#136;&#182;&#228;&#184;&#186;&lt;5M&#227;&#128;&#130;","   */","  upload: function (data, pic, callback, context) {","    return this.api_dispatch(data).upload(data, pic, callback, context);","  },","  ","  upload_pic_url: function (data, pic, callback, context) {","    return this.api_dispatch(data).upload_pic_url(data, pic, callback, context);","  },","  ","  /*","   * id, status, is_comment","   */","  repost: function (data, callback, context) {","    return this.api_dispatch(data).repost(data, callback, context);","  },","  ","  /*","   * id, comment, cid","   * without_mention: 1&#239;&#188;&#154;&#229;&#155;&#158;&#229;&#164;&#141;&#228;&#184;&#173;&#228;&#184;&#141;&#232;&#135;&#170;&#229;&#138;&#168;&#229;&#138;&#160;&#229;&#133;&#165;&#226;&#128;&#156;&#229;&#155;&#158;&#229;&#164;&#141;@&#231;&#148;&#168;&#230;&#136;&#183;&#229;&#144;&#141;&#226;&#128;&#157;&#239;&#188;&#140;0&#239;&#188;&#154;&#229;&#155;&#158;&#229;&#164;&#141;&#228;&#184;&#173;&#232;&#135;&#170;&#229;&#138;&#168;&#229;&#138;&#160;&#229;&#133;&#165;&#226;&#128;&#156;&#229;&#155;&#158;&#229;&#164;&#141;@&#231;&#148;&#168;&#230;&#136;&#183;&#229;&#144;&#141;&#226;&#128;&#157;. &#233;&#187;&#152;&#232;&#174;&#164;&#228;&#184;&#186;0.","   */","  comment: function (data, callback, context) {","    return this.api_dispatch(data).comment(data, callback, context);","  },","  ","  /*","   * cid, comment","   * id: &#232;&#166;&#129;&#232;&#175;&#132;&#232;&#174;&#186;&#231;&#154;&#132;&#229;&#190;&#174;&#229;&#141;&#154;&#230;&#182;&#136;&#230;&#129;&#175;ID","   * without_mention: 1&#239;&#188;&#154;&#229;&#155;&#158;&#229;&#164;&#141;&#228;&#184;&#173;&#228;&#184;&#141;&#232;&#135;&#170;&#229;&#138;&#168;&#229;&#138;&#160;&#229;&#133;&#165;&#226;&#128;&#156;&#229;&#155;&#158;&#229;&#164;&#141;@&#231;&#148;&#168;&#230;&#136;&#183;&#229;&#144;&#141;&#226;&#128;&#157;&#239;&#188;&#140;0&#239;&#188;&#154;&#229;&#155;&#158;&#229;&#164;&#141;&#228;&#184;&#173;&#232;&#135;&#170;&#229;&#138;&#168;&#229;&#138;&#160;&#229;&#133;&#165;&#226;&#128;&#156;&#229;&#155;&#158;&#229;&#164;&#141;@&#231;&#148;&#168;&#230;&#136;&#183;&#229;&#144;&#141;&#226;&#128;&#157;.&#233;&#187;&#152;&#232;&#174;&#164;&#228;&#184;&#186;0.","   */","  reply: function (data, callback, context) {","    return this.api_dispatch(data).reply(data, callback, context);","  },","  ","  /*","   * id, count, page","   */","  comments: function (data, callback, context) {","    return this.api_dispatch(data).comments(data, callback, context);","  },","  ","  // id","  comment_destroy: function (data, callback, context) {","    return this.api_dispatch(data).comment_destroy(data, callback, context);","  },","  ","  /*","   * id, user_id, screen_name &#232;&#191;&#153;&#228;&#184;&#137;&#228;&#184;&#170;&#229;&#143;&#130;&#230;&#149;&#176;&#229;&#191;&#133;&#229;&#161;&#171;&#229;&#133;&#182;&#228;&#184;&#128;&#227;&#128;&#130;","   */","  friendships_create: function (data, callback, context) {","    return this.api_dispatch(data).friendships_create(data, callback, context);","  },","  ","  // id","  friendships_destroy: function (data, callback, context) {","    return this.api_dispatch(data).friendships_destroy(data, callback, context);","  },","  ","  /*","   * target_id, target_screen_name: &#229;&#143;&#130;&#230;&#149;&#176;&#229;&#191;&#133;&#233;&#128;&#137;&#229;&#133;&#182;&#228;&#184;&#128;","   * source_id, source_screen_name: &#229;&#143;&#130;&#230;&#149;&#176;&#229;&#143;&#175;&#228;&#184;&#141;&#229;&#161;&#171;&#239;&#188;&#140;&#229;&#166;&#130;&#230;&#158;&#156;&#228;&#184;&#141;&#229;&#161;&#171;&#239;&#188;&#140;&#229;&#136;&#153;&#233;&#187;&#152;&#232;&#174;&#164;&#229;&#143;&#150;&#229;&#189;&#147;&#229;&#137;&#141;&#231;&#153;&#187;&#229;&#189;&#149;&#231;&#148;&#168;&#230;&#136;&#183;","   */","  friendships_show: function (data, callback, context) {","    return this.api_dispatch(data).friendships_show(data, callback, context);","  },","  ","  // type: &#233;&#156;&#128;&#232;&#166;&#129;&#230;&#184;&#133;&#233;&#155;&#182;&#231;&#154;&#132;&#232;&#174;&#161;&#230;&#149;&#176;&#231;&#177;&#187;&#229;&#136;&#171;&#239;&#188;&#140;&#229;&#128;&#188;&#228;&#184;&#186;&#228;&#184;&#139;&#229;&#136;&#151;&#229;&#155;&#155;&#228;&#184;&#170;&#228;&#185;&#139;&#228;&#184;&#128;&#239;&#188;&#154;1. &#232;&#175;&#132;&#232;&#174;&#186;&#230;&#149;&#176;&#239;&#188;&#140;2. @me&#230;&#149;&#176;&#239;&#188;&#140;3. &#231;&#167;&#129;&#228;&#191;&#161;&#230;&#149;&#176;&#239;&#188;&#140;4. &#229;&#133;&#179;&#230;&#179;&#168;&#230;&#149;&#176;","  reset_count: function (data, callback, context) {","    return this.api_dispatch(data).reset_count(data, callback, context);","  },","    ","    // id &#231;&#145;&#158;&#230;&#142;&#168;","  retweet: function (data, callback, context) {","    return this.api_dispatch(data).retweet(data, callback, context);","  },","  ","  // id","  destroy: function (data, callback, context) {","    return this.api_dispatch(data).destroy(data, callback, context);","  },","  ","  // user_id, count, page","  tags: function (data, callback, context) {","    return this.api_dispatch(data).tags(data, callback, context);","  },","  ","  // count, page","  tags_suggestions: function (data, callback, context) {","    return this.api_dispatch(data).tags_suggestions(data, callback, context);","  },","  ","  // tags","  create_tag: function (data, callback, context) {","    return this.api_dispatch(data).create_tag(data, callback, context);","  },","  ","  // tag_id","  destroy_tag: function (data, callback, context) {","    return this.api_dispatch(data).destroy_tag(data, callback, context);","  },","  ","  // id","  status_show: function (data, callback, context) {","    return this.api_dispatch(data).status_show(data, callback, context);","  },","","  // list all emotions","  emotions: function (data, callback, context) {","    return this.api_dispatch(data).emotions(data, callback, context);","  }","});","","})();"];
